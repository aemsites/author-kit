{
  "version": 3,
  "sources": ["../../../index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-bZ9HAf/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-bZ9HAf/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/cmillar/Sites/source/author-kit/workers/website/.wrangler/tmp/dev-Ls54iP",
  "sourcesContent": ["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst getExtension = (path) => {\n  const basename = path.split('/').pop();\n  const pos = basename.lastIndexOf('.');\n  return (basename === '' || pos < 1) ? '' : basename.slice(pos + 1);\n};\n\nconst isMediaRequest = (url) => /\\/media_[0-9a-f]{40,}[/a-zA-Z0-9_-]*\\.[0-9a-z]+$/.test(url.pathname);\nconst isRUMRequest = (url) => /\\/\\.(rum|optel)\\/.*/.test(url.pathname);\n\nconst getDraft = (url) => {\n  if (!url.pathname.startsWith('/drafts/')) return null;\n  return new Response('Not Found', { status: 404 });\n};\n\nconst getPortRedirect = (request, url) => {\n  if (url.port && url.hostname !== 'localhost') {\n    const redirectTo = new URL(request.url);\n    redirectTo.port = '';\n    return new Response(`Moved permanently to ${redirectTo.href}`, {\n      status: 301,\n      headers: { location: redirectTo.href },\n    });\n  }\n  return null;\n};\n\nconst getRedirect = (resp, savedSearch) => {\n  if (!(resp.status === 301 && savedSearch)) return;\n  const location = resp.headers.get('location');\n  if (location && !location.match(/\\?.*$/)) {\n    resp.headers.set('location', `${location}${savedSearch}`);\n  }\n};\n\nconst getRUMRequest = (request, url) => {\n  if (!isRUMRequest(url)) return null;\n  if (['GET', 'POST', 'OPTIONS'].includes(request.method)) return null;\n  return new Response('Method Not Allowed', { status: 405 });\n};\n\nconst formatSearchParams = (url) => {\n  const { search, searchParams } = url;\n\n  if (isMediaRequest(url)) {\n    for (const [key] of searchParams.entries()) {\n      if (!['format', 'height', 'optimize', 'width'].includes(key)) searchParams.delete(key);\n    }\n  } else if (getExtension(url.pathname) === 'json') {\n    for (const [key] of searchParams.entries()) {\n      if (!['limit', 'offset', 'sheet'].includes(key)) searchParams.delete(key);\n    }\n  } else {\n    url.search = '';\n  }\n  searchParams.sort();\n\n  // Return original search params\n  return search;\n};\n\nconst formatRequest = (env, url) => {\n  url.hostname = env.AEM_HOSTNAME;\n  url.port = '';\n  url.protocol = 'https:';\n  const req = new Request(url);\n  req.headers.set('x-forwarded-host', req.headers.get('host'));\n  req.headers.set('x-byo-cdn-type', 'cloudflare');\n  if (env.PUSH_INVALIDATION !== 'disabled') {\n    req.headers.set('x-push-invalidation', 'enabled');\n  }\n  if (env.ORIGIN_AUTHENTICATION) {\n    req.headers.set('authorization', `token ${env.ORIGIN_AUTHENTICATION}`);\n  }\n  return req;\n};\n\nconst getSchedule = async (pathname, response) => {\n  if (!(pathname.includes('/schedules/') && pathname.endsWith('json'))) return null;\n\n  const schedule2Response = (json) => new Response(JSON.stringify(json), response);\n\n  const json = await response.json();\n  if (!json.data?.[0]?.fragment) return schedule2Response(json);\n\n  const data = [];\n  for (const [idx, schedule] of json.data.entries()) {\n    const { start, end } = schedule;\n\n    // Presumably the default fragment\n    if (!start && !end) {\n      data.push(json.data[idx]);\n    } else {\n      const now = Date.now();\n      const startDate = new Date(start);\n      const endDate = new Date(end);\n      if (startDate < now && endDate > now) data.push(json.data[idx]);\n    }\n  }\n\n  return schedule2Response({ ...json, data });\n};\n\nconst getCachability = ({ pathname }) => !(pathname.includes('/schedules/') && pathname.endsWith('json'));\n\nconst fetchFromOrigin = async (req, cacheEverything, savedSearch) => {\n  let resp = await fetch(req, { method: req.method, cf: { cacheEverything } });\n  resp = new Response(resp.body, resp);\n\n  // Handle redirects\n  const redirectResp = getRedirect(resp, savedSearch);\n  if (redirectResp) return redirectResp;\n\n  // 304 Not Modified - remove CSP header\n  if (resp.status === 304) resp.headers.delete('Content-Security-Policy');\n\n  resp.headers.delete('age');\n  resp.headers.delete('x-robots-tag');\n\n  return resp;\n};\n\nexport default {\n  async fetch(req, env) {\n    const url = new URL(req.url);\n\n    const draftResp = getDraft(url);\n    if (draftResp) return draftResp;\n\n    const portResp = getPortRedirect(req, url);\n    if (portResp) return portResp;\n\n    const rumResp = getRUMRequest(req, url);\n    if (rumResp) return rumResp;\n\n    const request = formatRequest(env, url);\n\n    const cacheable = getCachability(url);\n\n    const savedSearch = formatSearchParams(url);\n\n    const originResp = await fetchFromOrigin(request, cacheable, savedSearch);\n\n    const scheduleResp = await getSchedule(url.pathname, originResp);\n    if (scheduleResp) return scheduleResp;\n\n    return originResp;\n  },\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/cmillar/Sites/source/author-kit/workers/website/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/cmillar/Sites/source/author-kit/workers/website/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/cmillar/Sites/source/author-kit/workers/website/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/cmillar/Sites/source/author-kit/workers/website/index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/cmillar/Sites/source/author-kit/workers/website/.wrangler/tmp/bundle-bZ9HAf/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/cmillar/Sites/source/author-kit/workers/website/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/cmillar/Sites/source/author-kit/workers/website/.wrangler/tmp/bundle-bZ9HAf/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/cmillar/Sites/source/author-kit/workers/website/.wrangler/tmp/bundle-bZ9HAf/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["json"]
}
